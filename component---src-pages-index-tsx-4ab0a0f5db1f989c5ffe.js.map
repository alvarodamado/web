{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/Scheduled.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","dueDate","date_iso","fallback","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","ScheduleFallback","Scheduled","Date","children","hasMagicWords","window","hash"],"mappings":"2FAAA,sIA0EeA,UAxCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,SAEVC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CAAWC,QAASJ,EAAKC,YAAYI,SAAiBC,SAAU,sCAC9D,6BAASC,IAAKP,EAAKE,OAAOC,MACxB,gCACE,wBACEK,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIZ,EAAKE,OAAOC,MACjDR,IAGL,+BAAQK,EAAKC,YAAYY,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,mBAc1D,IAAMC,EAAY,a,kCC5EzB,yBAEA,SAASC,IACP,OAAO,kEAaMC,IAVf,YAII,IAAD,IAHDhB,eAGC,MAHS,IAAIiB,KAGb,MAFDf,gBAEC,MAFU,kBAACa,EAAD,MAEV,EADDG,EACC,EADDA,SAEMC,EAAkC,oBAAXC,QAAmD,WAAzBA,OAAOjC,SAASkC,KAEvE,OADsB,IAAIJ,KAAKjB,IAAY,IAAIiB,MACvBE,EAAgBD,EAAWhB","file":"component---src-pages-index-tsx-4ab0a0f5db1f989c5ffe.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport Scheduled from \"../components/Scheduled\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          date_iso: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Blog\" />\n      {/* <Bio /> */}\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <Scheduled dueDate={node.frontmatter.date_iso as any} fallback={<></>}>\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          </Scheduled>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date_iso: date\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nfunction ScheduleFallback() {\n  return <p>ðŸ¤« Â¡Shhhh! No hay nada que ver aquÃ­</p>\n}\n\nfunction Scheduled({\n  dueDate = new Date(),\n  fallback = <ScheduleFallback/>,\n  children,\n}) {\n  const hasMagicWords = typeof window !== 'undefined' && window.location.hash === '#porfi'\n  const isDueDateOver = new Date(dueDate) <= new Date()\n  return isDueDateOver ||Â hasMagicWords ? children : fallback\n}\n\nexport default Scheduled"],"sourceRoot":""}